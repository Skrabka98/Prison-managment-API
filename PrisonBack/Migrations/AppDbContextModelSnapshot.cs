// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrisonBack.Persistence.Context;

namespace PrisonBack.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrisonBack.Domain.Models.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Beds")
                        .HasColumnType("int");

                    b.Property<int>("IdCellType")
                        .HasColumnType("int");

                    b.Property<int>("IdPrison")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCellType");

                    b.HasIndex("IdPrison");

                    b.ToTable("Cell");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.CellType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CellType");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Isolation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrisoner")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPrisoner");

                    b.ToTable("Isolation");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Pass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrisoner")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPrisoner");

                    b.HasIndex("IdUser");

                    b.ToTable("Pass");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PermissionName = "Admin"
                        });
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Prison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PrisonName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prison");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Prisoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Behavior")
                        .HasColumnType("int");

                    b.Property<string>("Forname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCell")
                        .HasColumnType("int");

                    b.Property<bool>("Isolated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pass")
                        .HasColumnType("bit");

                    b.Property<string>("Pesel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrisonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCell");

                    b.HasIndex("PrisonId");

                    b.ToTable("Prisoner");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Punishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrisoner")
                        .HasColumnType("int");

                    b.Property<int>("IdReason")
                        .HasColumnType("int");

                    b.Property<bool>("Lifery")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPrisoner");

                    b.HasIndex("IdReason");

                    b.ToTable("Punishment");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReasonName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reason");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Forname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Login = "Bartek",
                            Mail = "blabla",
                            Password = "xxxx"
                        },
                        new
                        {
                            Id = 101,
                            Login = "Bartek1",
                            Mail = "blabla",
                            Password = "xxxxxx"
                        });
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPermission")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPermission");

                    b.HasIndex("IdUser");

                    b.ToTable("UserPermission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdPermission = 1,
                            IdUser = 100
                        });
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Cell", b =>
                {
                    b.HasOne("PrisonBack.Domain.Models.CellType", "CellType")
                        .WithMany()
                        .HasForeignKey("IdCellType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisonBack.Domain.Models.Prison", "Prison")
                        .WithMany("Cells")
                        .HasForeignKey("IdPrison")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Isolation", b =>
                {
                    b.HasOne("PrisonBack.Domain.Models.Prisoner", "Prisoner")
                        .WithMany("Isolations")
                        .HasForeignKey("IdPrisoner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Pass", b =>
                {
                    b.HasOne("PrisonBack.Domain.Models.Prisoner", "Prisoner")
                        .WithMany("Passes")
                        .HasForeignKey("IdPrisoner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisonBack.Domain.Models.User", "User")
                        .WithMany("Passes")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Prisoner", b =>
                {
                    b.HasOne("PrisonBack.Domain.Models.Cell", "Cell")
                        .WithMany("Prisoner")
                        .HasForeignKey("IdCell")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisonBack.Domain.Models.Prison", null)
                        .WithMany("Prisoner")
                        .HasForeignKey("PrisonId");
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.Punishment", b =>
                {
                    b.HasOne("PrisonBack.Domain.Models.Prisoner", "Prisoner")
                        .WithMany()
                        .HasForeignKey("IdPrisoner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisonBack.Domain.Models.Reason", "Reason")
                        .WithMany("Punishments")
                        .HasForeignKey("IdReason")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrisonBack.Domain.Models.UserPermission", b =>
                {
                    b.HasOne("PrisonBack.Domain.Models.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("IdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisonBack.Domain.Models.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
